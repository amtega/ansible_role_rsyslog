---
# Role tasks

- block:
    - name: Setup config files for rsyslog output modules
      template:
        src: module.j2
        dest: "{{ rsyslog_config_dir }}/{{ rsyslog_module.filename }}"
        mode: 0644
      loop: "{{ rsyslog_modules_to_manage }}"
      loop_control:
        loop_var: rsyslog_module
        label: "{{ rsyslog_config_dir }}/{{ rsyslog_module.filename }}"
      notify: rsyslog service restart
      vars:
        rsyslog_modules_to_manage: >-
          {{ rsyslog_modules
             + ((rsyslog_load_from_hostvars)
                | ternary(rsyslog_modules_hostvars
                          | default([])
                          | flatten,
                          [])) }}

    - name: Setup raw config files
      template:
        src: raw_config.j2
        dest: "{{ rsyslog_config_dir }}/{{ rsyslog_raw_config.file }}"
        mode: 0644
      loop: >-
        {{ rsyslog_raw_configs 
           | dict2items(key_name='file', value_name='content') }}
      loop_control:
        loop_var: rsyslog_raw_config
        label: "{{ rsyslog_config_dir }}/{{ rsyslog_raw_config.file }}"
      when: 
        - rsyslog_raw_config.file is defined
      notify: rsyslog service restart
        dest: "{{ rsyslog_config_dir }}/{{ rsyslog_raw_config }}"
      vars:
        rsyslog_raw_configs: >-
          {{ rsyslog_raw_configs
             + ((rsyslog_load_from_hostvars)
                | ternary(rsyslog_raw_configs_hostvars
                          | default([])
                          | flatten,
                          [])) }}

    - name: Setup rsyslog options
      lineinfile:
        path: "{{ rsyslog_sysconfig_file }}"
        regexp: '^SYSLOGD_OPTIONS='
        line: 'SYSLOGD_OPTIONS="{{ rsyslog_options }}"'
      notify: rsyslog service restart

    - name: Setup default log file creation permissions
      lineinfile:
        path: "{{ rsyslog_config_file }}"
        insertafter: '^#### GLOBAL DIRECTIVES'
        regexp: '^\$FileCreateMode'
        line: "$FileCreateMode {{ rsyslog_log_file_mode }}"
      notify: rsyslog service restart

    - name: Search all rsyslog config files
      find:
        paths: "{{ rsyslog_config_dir }}/"
        patterns: "*.conf"
      register: rsyslog_find_conf_files_result

    - name: Setup extra config files log file creation permissions
      lineinfile:
        path: "{{ config_extra_file }}"
        regexp: '^\$FileCreateMode'
        state: absent
      loop: >-
        {{ rsyslog_find_conf_files_result.files
           | map(attribute="path")
           | list
           | default([]) }}
      loop_control:
        loop_var: config_extra_file
      notify: rsyslog service restart

  tags:
    - role::rsyslog
    - role::rsyslog::configure
