---

- name: Setup rsyslog
  block:
    - name: Setup config files for rsyslog output modules
      ansible.builtin.template:
        src: module.j2
        dest: "{{ rsyslog_config_dir }}/{{ rsyslog_module.filename }}"
        mode: 0644
      loop: "{{ rsyslog_modules_to_manage }}"
      loop_control:
        loop_var: rsyslog_module
        label: "{{ rsyslog_config_dir }}/{{ rsyslog_module.filename }}"
      notify: rsyslog service restart
      vars:
        rsyslog_modules_to_manage: >-
          {{ rsyslog_modules
             + ((rsyslog_load_from_hostvars)
                | ternary(rsyslog_modules_hostvars
                          | default([])
                          | flatten,
                          [])) }}

    - name: Setup raw config files
      ansible.builtin.template:
        src: raw_config.j2
        dest: "{{ rsyslog_config_dir }}/{{ rsyslog_raw_config.file }}"
        mode: 0644
      loop: >-
        {{ rsyslog_raw_configs_to_manage
           | dict2items(key_name='file', value_name='properties') }}
      loop_control:
        loop_var: rsyslog_raw_config
        label: "{{ rsyslog_config_dir }}/{{ rsyslog_raw_config.file }}"
      when:
        - rsyslog_raw_configs is defined
        - rsyslog_raw_config.file is defined
        - rsyslog_raw_config.properties.state == 'present'
      notify: rsyslog service restart
      vars:
        rsyslog_raw_configs_to_manage: >-
          {{ rsyslog_raw_configs
             | combine((rsyslog_load_from_hostvars)
               | ternary(rsyslog_raw_configs_from_hostvars
                         | default({})
                         | flatten, {})) }}

    - name: Remove disabled raw config files
      ansible.builtin.file:
        path: "{{ rsyslog_config_dir }}/{{ rsyslog_raw_config.file }}"
        state: absent
      loop: >-
        {{ rsyslog_raw_configs_to_manage
           | dict2items(key_name='file', value_name='properties') }}
      loop_control:
        loop_var: rsyslog_raw_config
        label: "{{ rsyslog_config_dir }}/{{ rsyslog_raw_config.file }}"
      when:
        - rsyslog_raw_configs is defined
        - rsyslog_raw_config.file is defined
        - rsyslog_raw_config.properties.state == 'absent'
      vars:
        rsyslog_raw_configs_to_manage: >-
          {{ rsyslog_raw_configs
             | combine((rsyslog_load_from_hostvars)
               | ternary(rsyslog_raw_configs_from_hostvars
                         | default({})
                         | flatten, {})) }}

    - name: Setup rsyslog options
      ansible.builtin.lineinfile:
        path: "{{ rsyslog_sysconfig_file }}"
        regexp: '^SYSLOGD_OPTIONS='
        line: 'SYSLOGD_OPTIONS="{{ rsyslog_options }}"'
      notify: rsyslog service restart

    - name: Setup default log file creation permissions
      ansible.builtin.lineinfile:
        path: "{{ rsyslog_config_file }}"
        insertafter: '^#### GLOBAL DIRECTIVES'
        regexp: '^\$FileCreateMode'
        line: "$FileCreateMode {{ rsyslog_log_file_mode }}"
      notify: rsyslog service restart

    - name: Search all rsyslog config files
      ansible.builtin.find:
        paths: "{{ rsyslog_config_dir }}/"
        patterns: "*.conf"
      register: rsyslog_find_conf_files_result

    - name: Setup extra config files log file creation permissions
      ansible.builtin.lineinfile:
        path: "{{ config_extra_file }}"
        regexp: '^\$FileCreateMode'
        state: absent
      loop: >-
        {{ rsyslog_find_conf_files_result.files
           | map(attribute="path")
           | list
           | default([]) }}
      loop_control:
        loop_var: config_extra_file
      notify: rsyslog service restart

    - name: Manage redhat distros
      block:
        - name: Setup rsyslog package
          ansible.builtin.yum:
            list: rsyslog
            update_cache: no
          register: rsyslog_pkg_result

        - name: Setup fact with rsyslog major version
          ansible.builtin.set_fact:
            rsyslog_major_version: >-
              {{ rsyslog_pkg_result.results[0].version
                 | regex_replace('^([578])\..*','\1') }}
          failed_when:
            - rsyslog_major_version | int not in [5,7,8]

        - name: Check valid configuration
          ansible.builtin.command: >-
            {{ '/usr/sbin/rsyslogd -N' ~ rsyslog_major_version }}
          when: ansible_facts.distribution_major_version is search("7", ">=")
          register: rsyslog_valid_configuration_result
          changed_when: no
          failed_when: rsyslog_valid_configuration_result.rc != 0
      when:
        - ansible_facts.os_family | lower == "redhat"

  tags:
    - role::rsyslog
    - role::rsyslog::configure
